import { Request, Response } from 'express';
import Controller from '../controller';
import { IUnleashConfig } from '../../types/option';
import { IUnleashServices } from '../../types/services';
declare class ContextController extends Controller {
    private logger;
    private contextService;
    constructor(config: IUnleashConfig, { contextService }: Pick<IUnleashServices, 'contextService'>);
    getContextFields(req: Request, res: Response): Promise<void>;
    getContextField(req: Request, res: Response): Promise<void>;
    createContextField(req: Request, res: Response): Promise<void>;
    updateContextField(req: Request, res: Response): Promise<void>;
    deleteContextField(req: Request, res: Response): Promise<void>;
    validate(req: Request, res: Response): Promise<void>;
}
export default ContextController;
