"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("./util");
const controller_1 = __importDefault(require("../controller"));
const extract_user_1 = __importDefault(require("../../extract-user"));
const permissions_1 = require("../../types/permissions");
class ArchiveController extends controller_1.default {
    constructor(config, { featureToggleService, }) {
        super(config);
        this.logger = config.getLogger('/admin-api/archive.js');
        this.featureService = featureToggleService;
        this.get('/features', this.getArchivedFeatures);
        this.delete('/:featureName', this.deleteFeature, permissions_1.DELETE_FEATURE);
        this.post('/revive/:featureName', this.reviveFeatureToggle, permissions_1.UPDATE_FEATURE);
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    async getArchivedFeatures(req, res) {
        try {
            const features = await this.featureService.getArchivedFeatures();
            res.json({ features });
        }
        catch (err) {
            util_1.handleErrors(res, this.logger, err);
        }
    }
    async deleteFeature(req, res) {
        const { featureName } = req.params;
        try {
            await this.featureService.deleteFeature(featureName);
            res.status(200).end();
        }
        catch (error) {
            util_1.handleErrors(res, this.logger, error);
        }
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    async reviveFeatureToggle(req, res) {
        const userName = extract_user_1.default(req);
        const { featureName } = req.params;
        try {
            await this.featureService.reviveToggle(featureName, userName);
            return res.status(200).end();
        }
        catch (error) {
            this.logger.error('Server failed executing request', error);
            return res.status(500).end();
        }
    }
}
exports.default = ArchiveController;
module.exports = ArchiveController;
//# sourceMappingURL=archive.js.map