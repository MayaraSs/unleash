'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const controller_1 = __importDefault(require("../controller"));
const extract_user_1 = __importDefault(require("../../extract-user"));
const util_1 = require("./util");
const permissions_1 = require("../../types/permissions");
class AddonController extends controller_1.default {
    constructor(config, { addonService }) {
        super(config);
        this.logger = config.getLogger('/admin-api/addon.js');
        this.addonService = addonService;
        this.get('/', this.getAddons);
        this.post('/', this.createAddon, permissions_1.CREATE_ADDON);
        this.get('/:id', this.getAddon);
        this.put('/:id', this.updateAddon, permissions_1.UPDATE_ADDON);
        this.delete('/:id', this.deleteAddon, permissions_1.DELETE_ADDON);
    }
    async getAddons(req, res) {
        try {
            const addons = await this.addonService.getAddons();
            const providers = await this.addonService.getProviderDefinition();
            res.json({ addons, providers });
        }
        catch (error) {
            util_1.handleErrors(res, this.logger, error);
        }
    }
    async getAddon(req, res) {
        const { id } = req.params;
        try {
            const addon = await this.addonService.getAddon(id);
            res.json(addon);
        }
        catch (error) {
            util_1.handleErrors(res, this.logger, error);
        }
    }
    async updateAddon(req, res) {
        const { id } = req.params;
        const createdBy = extract_user_1.default(req);
        const data = req.body;
        try {
            const addon = await this.addonService.updateAddon(id, data, createdBy);
            res.status(200).json(addon);
        }
        catch (error) {
            util_1.handleErrors(res, this.logger, error);
        }
    }
    async createAddon(req, res) {
        const createdBy = extract_user_1.default(req);
        const data = req.body;
        try {
            const addon = await this.addonService.createAddon(data, createdBy);
            res.status(201).json(addon);
        }
        catch (error) {
            util_1.handleErrors(res, this.logger, error);
        }
    }
    async deleteAddon(req, res) {
        const { id } = req.params;
        const username = extract_user_1.default(req);
        try {
            await this.addonService.removeAddon(id, username);
            res.status(200).end();
        }
        catch (error) {
            util_1.handleErrors(res, this.logger, error);
        }
    }
}
exports.default = AddonController;
module.exports = AddonController;
//# sourceMappingURL=addon.js.map