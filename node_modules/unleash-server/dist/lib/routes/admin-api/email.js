"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const permissions_1 = require("../../types/permissions");
const email_service_1 = require("../../services/email-service");
const util_1 = require("./util");
const Controller = require('../controller');
class EmailController extends Controller {
    constructor(config, { emailService }) {
        super(config);
        this.emailService = emailService;
        this.logger = config.getLogger('routes/admin-api/email');
        this.get('/preview/html/:template', this.getHtmlPreview, permissions_1.ADMIN);
        this.get('/preview/text/:template', this.getTextPreview, permissions_1.ADMIN);
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    async getHtmlPreview(req, res) {
        try {
            const { template } = req.params;
            const ctx = req.query;
            const data = await this.emailService.compileTemplate(template, email_service_1.TemplateFormat.HTML, ctx);
            res.setHeader('Content-Type', 'text/html');
            res.status(200);
            res.send(data);
            res.end();
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    async getTextPreview(req, res) {
        try {
            const { template } = req.params;
            const ctx = req.query;
            const data = await this.emailService.compileTemplate(template, email_service_1.TemplateFormat.PLAIN, ctx);
            res.setHeader('Content-Type', 'text/plain');
            res.status(200);
            res.send(data);
            res.end();
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
}
exports.default = EmailController;
module.exports = EmailController;
//# sourceMappingURL=email.js.map