"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const controller_1 = __importDefault(require("../controller"));
const version_1 = __importDefault(require("../../util/version"));
class BootstrapController extends controller_1.default {
    constructor(config, { contextService, tagTypeService, strategyService, projectService, accessService, emailService, versionService, featureTypeService, }) {
        super(config);
        this.contextService = contextService;
        this.tagTypeService = tagTypeService;
        this.strategyService = strategyService;
        this.projectService = projectService;
        this.accessService = accessService;
        this.featureTypeService = featureTypeService;
        this.emailService = emailService;
        this.versionService = versionService;
        this.logger = config.getLogger('routes/admin-api/bootstrap-controller.ts');
        this.get('/', this.bootstrap);
    }
    async bootstrap(req, res) {
        const jobs = [
            this.contextService.getAll(),
            this.featureTypeService.getAll(),
            this.tagTypeService.getAll(),
            this.strategyService.getStrategies(),
            this.projectService.getProjects(),
            this.accessService.getPermissionsForUser(req.user),
        ];
        const [context, featureTypes, tagTypes, strategies, projects, userPermissions,] = await Promise.all(jobs);
        const authenticationType = this.config.authentication && this.config.authentication.type;
        const versionInfo = this.versionService.getVersionInfo();
        const uiConfig = {
            ...this.config.ui,
            authenticationType,
            unleashUrl: this.config.server.unleashUrl,
            version: version_1.default,
            baseUriPath: this.config.server.baseUriPath,
            versionInfo,
        };
        res.json({
            uiConfig,
            user: { ...req.user, permissions: userPermissions },
            email: this.emailService.isEnabled(),
            context,
            featureTypes,
            tagTypes,
            strategies,
            projects,
        });
    }
}
exports.default = BootstrapController;
module.exports = BootstrapController;
//# sourceMappingURL=bootstrap-controller.js.map