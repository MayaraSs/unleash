'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("./util");
const permissions_1 = require("../../types/permissions");
const Controller = require('../controller');
const eventDiffer = require('../../event-differ');
const version = 1;
class EventController extends Controller {
    constructor(config, { eventService }) {
        super(config);
        this.eventService = eventService;
        this.get('/', this.getEvents, permissions_1.ADMIN);
        this.get('/:name', this.getEventsForToggle);
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    async getEvents(req, res) {
        try {
            const events = await this.eventService.getEvents();
            eventDiffer.addDiffs(events);
            res.json({ version, events });
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    async getEventsForToggle(req, res) {
        const toggleName = req.params.name;
        try {
            const events = await this.eventService.getEventsForToggle(toggleName);
            if (events) {
                eventDiffer.addDiffs(events);
                res.json({ toggleName, events });
            }
            else {
                res.status(404).json({ error: 'Could not find events' });
            }
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
}
exports.default = EventController;
module.exports = EventController;
//# sourceMappingURL=event.js.map