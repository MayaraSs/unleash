import { Request, Response } from 'express';
import Controller from '../controller';
import { IUnleashConfig } from '../../types/option';
import { IUnleashServices } from '../../types/services';
declare class FeatureController extends Controller {
    private logger;
    private featureService;
    constructor(config: IUnleashConfig, { featureToggleService, }: Pick<IUnleashServices, 'featureToggleService'>);
    getAllToggles(req: Request, res: Response): Promise<void>;
    getToggle(req: Request, res: Response): Promise<void>;
    listTags(req: Request, res: Response): Promise<void>;
    addTag(req: Request, res: Response): Promise<void>;
    removeTag(req: Request, res: Response): Promise<void>;
    validate(req: Request, res: Response): Promise<void>;
    createToggle(req: Request, res: Response): Promise<void>;
    updateToggle(req: Request, res: Response): Promise<void>;
    toggle(req: Request, res: Response): Promise<void>;
    toggleOn(req: Request, res: Response): Promise<void>;
    toggleOff(req: Request, res: Response): Promise<void>;
    staleOn(req: Request, res: Response): Promise<void>;
    staleOff(req: Request, res: Response): Promise<void>;
    _updateField(field: any, value: any, req: any, res: any): Promise<void>;
    archiveToggle(req: Request, res: Response): Promise<void>;
}
export default FeatureController;
