import { Response } from 'express';
import Controller from '../controller';
import { ApiTokenService } from '../../services/api-token-service';
import { AccessService } from '../../services/access-service';
import { IAuthRequest } from '../unleash-types';
import { IUnleashConfig } from '../../types/option';
interface IServices {
    apiTokenService: ApiTokenService;
    accessService: AccessService;
}
declare class ApiTokenController extends Controller {
    private apiTokenService;
    private accessService;
    private logger;
    constructor(config: IUnleashConfig, services: IServices);
    private isTokenAdmin;
    getAllApiTokens(req: IAuthRequest, res: Response): Promise<void>;
    createApiToken(req: IAuthRequest, res: Response): Promise<any>;
    deleteApiToken(req: IAuthRequest, res: Response): Promise<void>;
    updateApiToken(req: IAuthRequest, res: Response): Promise<any>;
}
export default ApiTokenController;
