import { Request, Response } from 'express';
import Controller from '../controller';
import { IUnleashConfig } from '../../types/option';
import { IUnleashServices } from '../../types/services';
export default class UserAdminController extends Controller {
    private userService;
    private accessService;
    private readonly logger;
    private emailService;
    private resetTokenService;
    private sessionService;
    constructor(config: IUnleashConfig, { userService, accessService, emailService, resetTokenService, sessionService, }: Pick<IUnleashServices, 'userService' | 'accessService' | 'emailService' | 'resetTokenService' | 'sessionService'>);
    resetPassword(req: any, res: any): Promise<void>;
    getUsers(req: any, res: any): Promise<void>;
    getActiveSessions(req: Request, res: Response): Promise<void>;
    search(req: any, res: any): Promise<void>;
    createUser(req: any, res: any): Promise<void>;
    updateUser(req: any, res: any): Promise<void>;
    deleteUser(req: any, res: any): Promise<void>;
    validatePassword(req: any, res: any): Promise<void>;
    changePassword(req: any, res: any): Promise<void>;
}
