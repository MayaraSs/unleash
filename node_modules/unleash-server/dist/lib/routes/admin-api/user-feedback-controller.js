"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const controller_1 = __importDefault(require("../controller"));
const util_1 = require("./util");
class UserFeedbackController extends controller_1.default {
    constructor(config, { userFeedbackService }) {
        super(config);
        this.logger = config.getLogger('feedback-controller.ts');
        this.userFeedbackService = userFeedbackService;
        this.post('/', this.recordFeedback);
        this.put('/:id', this.updateFeedbackSettings);
    }
    async recordFeedback(req, res) {
        const BAD_REQUEST = 400;
        const { user } = req;
        const { feedbackId } = req.body;
        if (!feedbackId) {
            res.status(BAD_REQUEST).json({
                error: 'feedbackId must be present.',
            });
            return;
        }
        const feedback = {
            ...req.body,
            userId: user.id,
            given: new Date(),
            neverShow: req.body.neverShow || false,
        };
        try {
            const updated = await this.userFeedbackService.updateFeedback(feedback);
            res.json(updated);
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    async updateFeedbackSettings(req, res) {
        const { user } = req;
        const { id } = req.params;
        const feedback = {
            ...req.body,
            feedbackId: id,
            userId: user.id,
            neverShow: req.body.neverShow || false,
        };
        try {
            const updated = await this.userFeedbackService.updateFeedback(feedback);
            res.json(updated);
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
}
module.exports = UserFeedbackController;
exports.default = UserFeedbackController;
//# sourceMappingURL=user-feedback-controller.js.map