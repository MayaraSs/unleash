"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const controller_1 = __importDefault(require("../controller"));
const util_1 = require("../admin-api/util");
class ResetPasswordController extends controller_1.default {
    constructor(config, { userService }) {
        super(config);
        this.logger = config.getLogger('lib/routes/auth/reset-password-controller.ts');
        this.userService = userService;
        this.get('/validate', this.validateToken);
        this.post('/password', this.changePassword);
        this.post('/validate-password', this.validatePassword);
        this.post('/password-email', this.sendResetPasswordEmail);
    }
    async sendResetPasswordEmail(req, res) {
        const { email } = req.body;
        try {
            await this.userService.createResetPasswordEmail(email);
            res.status(200).end();
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    async validatePassword(req, res) {
        const { password } = req.body;
        try {
            this.userService.validatePassword(password);
            res.status(200).end();
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    async validateToken(req, res) {
        const { token } = req.query;
        try {
            const user = await this.userService.getUserForToken(token);
            await this.logout(req);
            res.status(200).json(user);
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    async changePassword(req, res) {
        await this.logout(req);
        const { token, password } = req.body;
        try {
            await this.userService.resetPassword(token, password);
            res.status(200).end();
        }
        catch (e) {
            util_1.handleErrors(res, this.logger, e);
        }
    }
    async logout(req) {
        if (req.session) {
            req.session.destroy();
        }
    }
}
exports.default = ResetPasswordController;
module.exports = ResetPasswordController;
//# sourceMappingURL=reset-password-controller.js.map