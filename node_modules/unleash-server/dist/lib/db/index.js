'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createStores = void 0;
const db_pool_1 = require("./db-pool");
const event_store_1 = __importDefault(require("./event-store"));
const feature_toggle_store_1 = __importDefault(require("./feature-toggle-store"));
const feature_type_store_1 = __importDefault(require("./feature-type-store"));
const strategy_store_1 = __importDefault(require("./strategy-store"));
const client_instance_store_1 = __importDefault(require("./client-instance-store"));
const client_metrics_db_1 = __importDefault(require("./client-metrics-db"));
const client_metrics_store_1 = __importDefault(require("./client-metrics-store"));
const client_applications_store_1 = __importDefault(require("./client-applications-store"));
const context_field_store_1 = __importDefault(require("./context-field-store"));
const setting_store_1 = __importDefault(require("./setting-store"));
const user_store_1 = __importDefault(require("./user-store"));
const project_store_1 = __importDefault(require("./project-store"));
const tag_store_1 = __importDefault(require("./tag-store"));
const tag_type_store_1 = __importDefault(require("./tag-type-store"));
const addon_store_1 = __importDefault(require("./addon-store"));
const api_token_store_1 = require("./api-token-store");
const session_store_1 = __importDefault(require("./session-store"));
const access_store_1 = require("./access-store");
const reset_token_store_1 = require("./reset-token-store");
const user_feedback_store_1 = __importDefault(require("./user-feedback-store"));
const createStores = (config, eventBus) => {
    const { getLogger } = config;
    const db = db_pool_1.createDb(config);
    const eventStore = new event_store_1.default(db, getLogger);
    const clientMetricsDb = new client_metrics_db_1.default(db, getLogger);
    return {
        db,
        eventStore,
        featureToggleStore: new feature_toggle_store_1.default(db, eventBus, getLogger),
        featureTypeStore: new feature_type_store_1.default(db, getLogger),
        strategyStore: new strategy_store_1.default(db, getLogger),
        clientApplicationsStore: new client_applications_store_1.default(db, eventBus),
        clientInstanceStore: new client_instance_store_1.default(db, eventBus, getLogger),
        clientMetricsStore: new client_metrics_store_1.default(clientMetricsDb, eventBus, getLogger),
        contextFieldStore: new context_field_store_1.default(db, getLogger),
        settingStore: new setting_store_1.default(db, getLogger),
        userStore: new user_store_1.default(db, getLogger),
        projectStore: new project_store_1.default(db, getLogger),
        tagStore: new tag_store_1.default(db, eventBus, getLogger),
        tagTypeStore: new tag_type_store_1.default(db, eventBus, getLogger),
        addonStore: new addon_store_1.default(db, eventBus, getLogger),
        accessStore: new access_store_1.AccessStore(db, eventBus, getLogger),
        apiTokenStore: new api_token_store_1.ApiTokenStore(db, eventBus, getLogger),
        resetTokenStore: new reset_token_store_1.ResetTokenStore(db, eventBus, getLogger),
        sessionStore: new session_store_1.default(db, eventBus, getLogger),
        userFeedbackStore: new user_feedback_store_1.default(db, eventBus, getLogger),
    };
};
exports.createStores = createStores;
module.exports = {
    createStores: exports.createStores,
};
//# sourceMappingURL=index.js.map