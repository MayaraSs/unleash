import { Knex } from 'knex';
import { LogProvider } from '../logger';
export interface IProject {
    id: string;
    name: string;
    description: string;
    createdAt: Date;
}
interface IProjectInsert {
    id: string;
    name: string;
    description: string;
}
interface IProjectArchived {
    id: string;
    archived: boolean;
}
declare class ProjectStore {
    private db;
    private logger;
    constructor(db: Knex, getLogger: LogProvider);
    fieldToRow(data: any): IProjectInsert;
    getAll(): Promise<IProject[]>;
    get(id: string): Promise<IProject>;
    hasProject(id: string): Promise<IProjectArchived>;
    create(project: any): Promise<IProject>;
    update(data: any): Promise<void>;
    importProjects(projects: any): Promise<IProject[]>;
    dropProjects(): Promise<void>;
    delete(id: any): Promise<void>;
    mapRow(row: any): IProject;
}
export default ProjectStore;
