export = FeatureToggleStore;
declare class FeatureToggleStore {
    constructor(db: any, eventBus: any, getLogger: any);
    db: any;
    logger: any;
    timer: (action: any) => any;
    getFeatures(query?: {}, fields?: string[]): Promise<any>;
    getFeaturesBy(fields: any): Promise<any>;
    count(): Promise<any>;
    getFeature(name: any): Promise<any>;
    getProjectId(name: any): Promise<any>;
    hasFeature(name: any): Promise<any>;
    getArchivedFeatures(): Promise<any>;
    lastSeenToggles(toggleNames: any): Promise<void>;
    rowToFeature(row: any): {
        name: any;
        description: any;
        type: any;
        project: any;
        enabled: boolean;
        stale: any;
        strategies: any;
        variants: any;
        createdAt: any;
        lastSeenAt: any;
    };
    eventDataToRow(data: any): {
        name: any;
        description: any;
        type: any;
        project: any;
        enabled: number;
        stale: any;
        archived: number;
        strategies: string;
        variants: string;
        created_at: any;
    };
    createFeature(data: any): Promise<{
        name: any;
        description: any;
        type: any;
        project: any;
        enabled: boolean;
        stale: any;
        strategies: any;
        variants: any;
        createdAt: any;
        lastSeenAt: any;
    }>;
    updateFeature(data: any): Promise<void>;
    archiveFeature(name: any): Promise<void>;
    deleteFeature(name: any): Promise<void>;
    reviveFeature({ name }: {
        name: any;
    }): Promise<void>;
    importFeature(data: any): Promise<void>;
    dropFeatures(): Promise<void>;
    getAllTagsForFeature(featureName: any): Promise<any>;
    tagFeature(featureName: any, tag: any): Promise<any>;
    getAllFeatureTags(): Promise<any>;
    dropFeatureTags(): Promise<void>;
    importFeatureTags(featureTags: any): Promise<any>;
    untagFeature(featureName: any, tag: any): Promise<void>;
    rowToTag(row: any): {
        value: any;
        type: any;
    };
    featureTagRowToTag(row: any): {
        value: any;
        type: any;
    };
    rowToFeatureAndTag(row: any): {
        featureName: any;
        tag: {
            type: any;
            value: any;
        };
    };
    importToRow({ featureName, tagType, tagValue }: {
        featureName: any;
        tagType: any;
        tagValue: any;
    }): {
        feature_name: any;
        tag_type: any;
        tag_value: any;
    };
    featureAndTagToRow(featureName: any, { type, value }: {
        type: any;
        value: any;
    }): {
        feature_name: any;
        tag_type: any;
        tag_value: any;
    };
}
