/// <reference types="node" />
import EventEmitter from 'events';
import { Knex } from 'knex';
import { LogProvider } from '../logger';
export interface ISession {
    sid: string;
    sess: any;
    createdAt: Date;
    expired?: Date;
}
export default class SessionStore {
    private logger;
    private eventBus;
    private db;
    constructor(db: Knex, eventBus: EventEmitter, getLogger: LogProvider);
    getActiveSessions(): Promise<ISession[]>;
    getSessionsForUser(userId: number): Promise<ISession[]>;
    getSession(sid: string): Promise<ISession>;
    deleteSessionsForUser(userId: number): Promise<void>;
    deleteSession(sid: string): Promise<void>;
    insertSession(data: Omit<ISession, 'createdAt'>): Promise<ISession>;
    deleteAll(): Promise<void>;
    private rowToSession;
}
