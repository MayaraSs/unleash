export = StateService;
declare class StateService {
    constructor(stores: any, { getLogger }: {
        getLogger: any;
    });
    eventStore: any;
    toggleStore: any;
    strategyStore: any;
    tagStore: any;
    tagTypeStore: any;
    projectStore: any;
    logger: any;
    importFile({ file, dropBeforeImport, userName, keepExisting }: {
        file: any;
        dropBeforeImport: any;
        userName: any;
        keepExisting: any;
    }): Promise<void>;
    import({ data, userName, dropBeforeImport, keepExisting }: {
        data: any;
        userName: any;
        dropBeforeImport: any;
        keepExisting: any;
    }): Promise<void>;
    importFeatures({ features, userName, dropBeforeImport, keepExisting, }: {
        features: any;
        userName: any;
        dropBeforeImport: any;
        keepExisting: any;
    }): Promise<void>;
    importStrategies({ strategies, userName, dropBeforeImport, keepExisting, }: {
        strategies: any;
        userName: any;
        dropBeforeImport: any;
        keepExisting: any;
    }): Promise<void>;
    importProjects({ projects, userName, dropBeforeImport, keepExisting, }: {
        projects: any;
        userName: any;
        dropBeforeImport: any;
        keepExisting: any;
    }): Promise<void>;
    importTagData({ tagTypes, tags, featureTags, userName, dropBeforeImport, keepExisting, }: {
        tagTypes: any;
        tags: any;
        featureTags: any;
        userName: any;
        dropBeforeImport: any;
        keepExisting: any;
    }): Promise<void>;
    compareFeatureTags: (old: any, tag: any) => boolean;
    importFeatureTags(featureTags: any, keepExisting: any, oldFeatureTags: any, userName: any): Promise<void>;
    compareTags: (old: any, tag: any) => boolean;
    importTags(tags: any, keepExisting: any, oldTags: any, userName: any): Promise<void>;
    importTagTypes(tagTypes: any, keepExisting: any, oldTagTypes: any[], userName: any): Promise<void>;
    export({ includeFeatureToggles, includeStrategies, includeProjects, includeTags, }: {
        includeFeatureToggles?: boolean;
        includeStrategies?: boolean;
        includeProjects?: boolean;
        includeTags?: boolean;
    }): Promise<{
        version: number;
        features: any;
        strategies: any;
        projects: any;
        tagTypes: any;
        tags: any;
        featureTags: any;
    }>;
}
