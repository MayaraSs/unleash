declare class ContextService {
    private projectStore;
    private eventStore;
    private contextFieldStore;
    private logger;
    constructor({ projectStore, eventStore, contextFieldStore }: {
        projectStore: any;
        eventStore: any;
        contextFieldStore: any;
    }, { getLogger }: {
        getLogger: any;
    });
    getAll(): Promise<import("../db/context-field-store").IContextField[]>;
    getContextField(name: any): Promise<import("../db/context-field-store").IContextField>;
    createContextField(value: any, userName: any): Promise<void>;
    updateContextField(updatedContextField: any, userName: any): Promise<void>;
    deleteContextField(name: any, userName: any): Promise<void>;
    validateUniqueName({ name }: {
        name: any;
    }): Promise<void>;
    validateName(name: any): Promise<void>;
}
export default ContextService;
